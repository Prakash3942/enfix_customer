import { Avatar, Box, Button, Typography } from "@mui/material";
import React from "react";
import CustomStepper from "../CustomStepper";
import EnPrimaryButton from "../EnPrimaryButton";

export interface ListPageHeaderComponentProps {
  recentPage: string;
  prevPages: any;
  headerPageName: any;
  addButtonText?: string;
  handleAddButton: any;
  transactionButtonText?: string;
  handleTransaction?: any;
  requestButtonText?: string;
  handleRequest?: any;
  createTransactiontButtonText?: string;
  handleCreateTransactino?: any;
  pendingSubscriptionButtonText?: string;
  handlePendingSubscription?: any;
  requestCount?: any;
}

export const ListPageHeaderComponent: React.FC<
  ListPageHeaderComponentProps
> = ({
  recentPage = "",
  prevPages = [],
  headerPageName = "",
  addButtonText = "",
  handleAddButton,
  transactionButtonText = "",
  handleTransaction,
  requestButtonText = "",
  handleRequest,
  createTransactiontButtonText = "",
  handleCreateTransactino,
  pendingSubscriptionButtonText = "",
  handlePendingSubscription,
  requestCount,
}) => {
  return (
    <>
      <Box
        display={"flex"}
        alignItems={"center"}
        justifyContent={"space-between"}
        width={"100%"}
        p={3}
      >
        <Box>
          <Typography fontSize={"16px"} fontWeight={600} color={"#000000"}>
            {headerPageName}
          </Typography>
          <CustomStepper prevPages={prevPages} recentPage={recentPage} />
        </Box>
        <Box display={"flex"} gap={2}>
          {requestButtonText && (
            <Button
              onClick={handleRequest}
              variant="outlined"
              sx={{ border: "solid 1px #373737", color: "#373737" }}
              startIcon={
                <svg
                  width="21"
                  height="21"
                  viewBox="0 0 21 21"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M19.1438 7.37527L17.4563 4.45215C17.235 4.06838 16.9202 3.74685 16.5412 3.51751C16.1622 3.28817 15.7313 3.15848 15.2887 3.14051C14.8461 3.12254 14.4061 3.21689 14.0097 3.41475C13.6134 3.61262 13.2736 3.90757 13.0219 4.27215L11.5838 1.77933C11.3563 1.38538 11.0303 1.05732 10.6378 0.827303C10.2454 0.597287 9.79984 0.47322 9.34496 0.467264C8.89008 0.461309 8.44147 0.57367 8.04309 0.793331C7.64472 1.01299 7.31028 1.33241 7.07255 1.72027C6.60825 1.30227 6.0101 1.06355 5.38558 1.04704C4.76106 1.03052 4.15112 1.23729 3.66539 1.63017C3.17965 2.02305 2.84996 2.57629 2.73556 3.19047C2.62117 3.80464 2.72958 4.43948 3.0413 4.9809L3.35442 5.52371C2.9128 5.5592 2.48735 5.70589 2.1177 5.95011C1.74805 6.19433 1.44623 6.52813 1.24035 6.92043C1.03446 7.31273 0.931223 7.75076 0.940241 8.19371C0.949259 8.63665 1.07024 9.07012 1.29192 9.45371L4.85442 15.6243C5.3939 16.5643 6.11436 17.3879 6.97414 18.0477C7.83392 18.7075 8.81596 19.1902 9.86348 19.4681C10.5644 19.6553 11.2868 19.7499 12.0122 19.7493C13.4592 19.7469 14.88 19.364 16.1322 18.6391C17.3844 17.9141 18.4239 16.8725 19.1464 15.6189C19.8689 14.3653 20.249 12.9437 20.2486 11.4967C20.2481 10.0498 19.8671 8.62844 19.1438 7.37527ZM18.5185 13.2468C18.173 14.5364 17.4529 15.6945 16.4492 16.5748C15.4455 17.4551 14.2033 18.018 12.8797 18.1923C11.5561 18.3666 10.2106 18.1445 9.01318 17.5541C7.81581 16.9636 6.82041 16.0314 6.15286 14.8753L2.59036 8.70465C2.51649 8.57667 2.46855 8.4354 2.44928 8.28889C2.43001 8.14239 2.43978 7.99352 2.47804 7.8508C2.55532 7.56255 2.74393 7.3168 3.00239 7.16761C3.26085 7.01843 3.56799 6.97803 3.85624 7.0553C3.99897 7.09356 4.13276 7.15956 4.24998 7.24953C4.3672 7.33949 4.46555 7.45167 4.53942 7.57965L6.60192 11.1515C6.64971 11.2395 6.71465 11.3171 6.7929 11.3796C6.87115 11.4421 6.96113 11.4883 7.05753 11.5155C7.15392 11.5427 7.25479 11.5503 7.35416 11.5378C7.45354 11.5254 7.54942 11.4932 7.63615 11.4431C7.72287 11.393 7.79869 11.326 7.85912 11.2461C7.91955 11.1663 7.96337 11.0751 7.98799 10.978C8.01262 10.881 8.01755 10.7799 8.0025 10.6809C7.98745 10.5819 7.95272 10.4869 7.90036 10.4015L4.33786 4.23183C4.22662 4.03913 4.17502 3.81776 4.18959 3.59573C4.20416 3.3737 4.28425 3.16097 4.41972 2.98446C4.55519 2.80794 4.73997 2.67556 4.95068 2.60406C5.16138 2.53257 5.38856 2.52515 5.60348 2.58277C5.74644 2.62048 5.88048 2.68623 5.99781 2.77619C6.11514 2.86616 6.21341 2.97855 6.28692 3.10683L9.47442 8.62777C9.57662 8.79442 9.73986 8.91458 9.92935 8.96264C10.1188 9.01071 10.3196 8.98289 10.4889 8.88511C10.6582 8.78733 10.7826 8.62732 10.8356 8.43916C10.8887 8.251 10.8661 8.04957 10.7729 7.87777L8.33536 3.65902C8.19261 3.40107 8.15682 3.09739 8.23569 2.81332C8.31456 2.52926 8.50179 2.2875 8.75709 2.14006C9.01239 1.99263 9.31537 1.95131 9.60083 2.02499C9.88629 2.09866 10.1314 2.28145 10.2835 2.53402L13.5 8.10465C12.6812 8.78308 12.1286 9.72916 11.9399 10.7757C11.7512 11.8222 11.9385 12.9017 12.4688 13.8234C12.5683 13.9957 12.7321 14.1214 12.9242 14.173C13.1164 14.2245 13.3212 14.1975 13.4935 14.0981C13.6658 13.9986 13.7915 13.8348 13.843 13.6426C13.8946 13.4505 13.8676 13.2457 13.7682 13.0734C13.3704 12.3844 13.2626 11.5656 13.4685 10.7972C13.6744 10.0287 14.177 9.37345 14.866 8.97558C14.9513 8.92635 15.0261 8.86079 15.0861 8.78265C15.1461 8.7045 15.1901 8.6153 15.2156 8.52015C15.2411 8.42499 15.2476 8.32574 15.2348 8.22807C15.2219 8.13039 15.1899 8.03621 15.1407 7.9509L14.2032 6.32715C14.0604 6.0692 14.0246 5.76552 14.1035 5.48145C14.1824 5.19738 14.3696 4.95562 14.6249 4.80819C14.8802 4.66076 15.1832 4.61943 15.4686 4.69311C15.7541 4.76679 15.9992 4.94957 16.1513 5.20215L17.8388 8.12527C18.2852 8.8914 18.5751 9.73849 18.6918 10.6175C18.8085 11.4965 18.7495 12.3898 18.5185 13.2459V13.2468ZM15.7754 0.806209C15.8008 0.711026 15.8448 0.621792 15.9047 0.543606C15.9647 0.46542 16.0395 0.399815 16.1248 0.350537C16.2101 0.30126 16.3043 0.269278 16.402 0.256417C16.4997 0.243556 16.5989 0.250069 16.6941 0.275584C18.1857 0.675896 19.4129 1.5984 20.1497 2.87527C20.2492 3.04758 20.2761 3.25234 20.2246 3.4445C20.1731 3.63667 20.0474 3.8005 19.875 3.89996C19.7027 3.99941 19.498 4.02635 19.3058 3.97483C19.1136 3.92332 18.9498 3.79758 18.8504 3.62527C18.3141 2.69527 17.4104 2.02027 16.306 1.72496C16.2108 1.6995 16.1216 1.65554 16.0434 1.59558C15.9652 1.53562 15.8996 1.46085 15.8503 1.37553C15.801 1.2902 15.7691 1.19601 15.7562 1.09832C15.7433 1.00064 15.7498 0.901376 15.7754 0.806209ZM6.08536 20.219C6.02438 20.2964 5.94874 20.3611 5.86277 20.4092C5.7768 20.4574 5.68218 20.4882 5.58432 20.4997C5.48646 20.5113 5.38728 20.5035 5.29244 20.4767C5.1976 20.4499 5.10897 20.4048 5.03161 20.3437C4.00036 19.529 3.1463 18.5081 2.35036 17.13C2.2509 16.9577 2.22397 16.7529 2.27548 16.5607C2.327 16.3686 2.45274 16.2047 2.62505 16.1053C2.79735 16.0058 3.00211 15.9789 3.19428 16.0304C3.38645 16.0819 3.55028 16.2077 3.64973 16.38C4.34723 17.5875 5.0813 18.4725 5.96067 19.1662C6.11674 19.2893 6.21754 19.4694 6.24092 19.6668C6.2643 19.8642 6.20835 20.0628 6.08536 20.219Z"
                    fill="#222222"
                  />
                </svg>
              }
              endIcon={
                // <svg
                //   width="24"
                //   height="22"
                //   viewBox="0 0 24 22"
                //   fill="none"
                //   xmlns="http://www.w3.org/2000/svg"
                // >
                //   <rect
                //     x="0.5"
                //     y="0.5"
                //     width="23"
                //     height="21"
                //     rx="10"
                //     fill="#D54545"
                //   />
                //   <path
                //     d="M8.1 15.644C7.564 15.644 7.1 15.548 6.708 15.356C6.316 15.156 5.992 14.872 5.736 14.504C5.48 14.136 5.288 13.684 5.16 13.148C5.04 12.612 4.98 12 4.98 11.312C4.98 10.632 5.04 10.024 5.16 9.488C5.288 8.944 5.48 8.488 5.736 8.12C5.992 7.752 6.316 7.472 6.708 7.28C7.1 7.08 7.564 6.98 8.1 6.98C9.164 6.98 9.948 7.36 10.452 8.12C10.964 8.88 11.22 9.944 11.22 11.312C11.22 12.68 10.964 13.744 10.452 14.504C9.948 15.264 9.164 15.644 8.1 15.644ZM8.1 14.312C8.636 14.312 9.008 14.112 9.216 13.712C9.432 13.304 9.54 12.756 9.54 12.068V10.556C9.54 9.868 9.432 9.324 9.216 8.924C9.008 8.516 8.636 8.312 8.1 8.312C7.564 8.312 7.188 8.516 6.972 8.924C6.764 9.324 6.66 9.868 6.66 10.556V12.068C6.66 12.756 6.764 13.304 6.972 13.712C7.188 14.112 7.564 14.312 8.1 14.312ZM17.8753 8.492H14.1073L13.9153 11.3H13.9993C14.0873 11.124 14.1833 10.96 14.2873 10.808C14.3913 10.656 14.5113 10.528 14.6473 10.424C14.7833 10.32 14.9393 10.24 15.1153 10.184C15.2993 10.12 15.5193 10.088 15.7753 10.088C16.1353 10.088 16.4713 10.148 16.7833 10.268C17.0953 10.388 17.3633 10.564 17.5873 10.796C17.8193 11.02 17.9993 11.296 18.1273 11.624C18.2633 11.952 18.3313 12.324 18.3313 12.74C18.3313 13.164 18.2633 13.552 18.1273 13.904C17.9913 14.256 17.7913 14.564 17.5273 14.828C17.2633 15.084 16.9393 15.284 16.5553 15.428C16.1713 15.572 15.7313 15.644 15.2353 15.644C14.8513 15.644 14.5073 15.6 14.2033 15.512C13.8993 15.432 13.6313 15.32 13.3993 15.176C13.1673 15.032 12.9673 14.868 12.7993 14.684C12.6313 14.492 12.4833 14.292 12.3553 14.084L13.5073 13.196C13.6033 13.356 13.7033 13.508 13.8073 13.652C13.9113 13.788 14.0313 13.908 14.1673 14.012C14.3113 14.116 14.4673 14.2 14.6353 14.264C14.8113 14.32 15.0153 14.348 15.2473 14.348C15.7193 14.348 16.0753 14.216 16.3153 13.952C16.5633 13.688 16.6873 13.328 16.6873 12.872V12.776C16.6873 12.344 16.5633 12.004 16.3153 11.756C16.0673 11.508 15.7233 11.384 15.2833 11.384C14.9393 11.384 14.6593 11.452 14.4433 11.588C14.2273 11.716 14.0553 11.856 13.9273 12.008L12.6313 11.828L12.9433 7.124H17.8753V8.492Z"
                //     fill="white"
                //   />
                // </svg>
                requestCount && (
                  <Avatar
                    sx={{
                      height: "30px",
                      width: "30px",
                      fontSize: "10px",
                      bgcolor: "#D54545",
                    }}
                  >
                    {requestCount}
                  </Avatar>
                )
              }
            >
              {requestButtonText}
            </Button>
          )}
          {transactionButtonText && (
            <Button
              onClick={handleTransaction}
              variant="outlined"
              sx={{ border: "solid 1px #373737", color: "#373737" }}
              startIcon={
                <svg
                  width="17"
                  height="20"
                  viewBox="0 0 17 20"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M16.5306 5.71938L11.2806 0.469375C11.2109 0.399749 11.1282 0.344539 11.0371 0.306898C10.9461 0.269257 10.8485 0.249923 10.75 0.25H1.75C1.35218 0.25 0.970644 0.408035 0.68934 0.68934C0.408035 0.970645 0.25 1.35218 0.25 1.75V18.25C0.25 18.6478 0.408035 19.0294 0.68934 19.3107C0.970644 19.592 1.35218 19.75 1.75 19.75H15.25C15.6478 19.75 16.0294 19.592 16.3107 19.3107C16.592 19.0294 16.75 18.6478 16.75 18.25V6.25C16.7501 6.15148 16.7307 6.05391 16.6931 5.96286C16.6555 5.87182 16.6003 5.78908 16.5306 5.71938ZM11.5 2.81031L14.1897 5.5H11.5V2.81031ZM15.25 18.25H1.75V1.75H10V6.25C10 6.44891 10.079 6.63968 10.2197 6.78033C10.3603 6.92098 10.5511 7 10.75 7H15.25V18.25ZM11.2806 12.4694C11.3504 12.539 11.4057 12.6217 11.4434 12.7128C11.4812 12.8038 11.5006 12.9014 11.5006 13C11.5006 13.0986 11.4812 13.1962 11.4434 13.2872C11.4057 13.3783 11.3504 13.461 11.2806 13.5306L9.03063 15.7806C8.96097 15.8504 8.87825 15.9057 8.7872 15.9434C8.69616 15.9812 8.59856 16.0006 8.5 16.0006C8.40144 16.0006 8.30384 15.9812 8.21279 15.9434C8.12175 15.9057 8.03903 15.8504 7.96937 15.7806L5.71937 13.5306C5.57864 13.3899 5.49958 13.199 5.49958 13C5.49958 12.801 5.57864 12.6101 5.71937 12.4694C5.86011 12.3286 6.05098 12.2496 6.25 12.2496C6.44902 12.2496 6.63989 12.3286 6.78063 12.4694L7.75 13.4397V9.25C7.75 9.05109 7.82902 8.86032 7.96967 8.71967C8.11032 8.57902 8.30109 8.5 8.5 8.5C8.69891 8.5 8.88968 8.57902 9.03033 8.71967C9.17098 8.86032 9.25 9.05109 9.25 9.25V13.4397L10.2194 12.4694C10.289 12.3996 10.3717 12.3443 10.4628 12.3066C10.5538 12.2688 10.6514 12.2494 10.75 12.2494C10.8486 12.2494 10.9462 12.2688 11.0372 12.3066C11.1283 12.3443 11.211 12.3996 11.2806 12.4694Z"
                    fill="#373737"
                  />
                </svg>
              }
            >
              {transactionButtonText}
            </Button>
          )}
          {createTransactiontButtonText && (
            <Button
              onClick={handleCreateTransactino}
              variant="contained"
              sx={{ backgroundColor: "#FFD527", boxShadow: "none" }}
              startIcon={
                <svg
                  width="18"
                  height="18"
                  viewBox="0 0 18 18"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M16.5 0H1.5C1.10218 0 0.720644 0.158035 0.43934 0.43934C0.158035 0.720644 0 1.10218 0 1.5V16.5C0 16.8978 0.158035 17.2794 0.43934 17.5607C0.720644 17.842 1.10218 18 1.5 18H16.5C16.8978 18 17.2794 17.842 17.5607 17.5607C17.842 17.2794 18 16.8978 18 16.5V1.5C18 1.10218 17.842 0.720644 17.5607 0.43934C17.2794 0.158035 16.8978 0 16.5 0ZM16.5 16.5H1.5V1.5H16.5V16.5ZM13.5 9C13.5 9.19891 13.421 9.38968 13.2803 9.53033C13.1397 9.67098 12.9489 9.75 12.75 9.75H9.75V12.75C9.75 12.9489 9.67098 13.1397 9.53033 13.2803C9.38968 13.421 9.19891 13.5 9 13.5C8.80109 13.5 8.61032 13.421 8.46967 13.2803C8.32902 13.1397 8.25 12.9489 8.25 12.75V9.75H5.25C5.05109 9.75 4.86032 9.67098 4.71967 9.53033C4.57902 9.38968 4.5 9.19891 4.5 9C4.5 8.80109 4.57902 8.61032 4.71967 8.46967C4.86032 8.32902 5.05109 8.25 5.25 8.25H8.25V5.25C8.25 5.05109 8.32902 4.86032 8.46967 4.71967C8.61032 4.57902 8.80109 4.5 9 4.5C9.19891 4.5 9.38968 4.57902 9.53033 4.71967C9.67098 4.86032 9.75 5.05109 9.75 5.25V8.25H12.75C12.9489 8.25 13.1397 8.32902 13.2803 8.46967C13.421 8.61032 13.5 8.80109 13.5 9Z"
                    fill="#373737"
                  />
                </svg>
              }
            >
              {createTransactiontButtonText}
            </Button>
          )}
          {/* <EnPrimaryButton disabled={false} loading={false} onClick={()=>{}} backgroundColor="#EFEFEF" textColor="#000000" hoverColor="">Active</EnPrimaryButton>  */}
          {addButtonText && (
            <EnPrimaryButton
              width={"auto"}
              disabled={false}
              loading={false}
              onClick={handleAddButton}
              hoverColor="black"
            >
              {addButtonText}
            </EnPrimaryButton>
          )}
          {pendingSubscriptionButtonText && (
            <EnPrimaryButton
              width={"auto"}
              disabled={false}
              loading={false}
              onClick={handlePendingSubscription}
              hoverColor="black"
              textWeight={500}
            >
              {pendingSubscriptionButtonText}
              <Typography
                sx={{
                  backgroundColor: "#D54545",
                  color: "#FFFFFF",
                  borderRadius: "15px",
                  fontSize: "12px",
                }}
                ml={0.5}
                p={0.5}
              >
                {requestCount}
              </Typography>
            </EnPrimaryButton>
          )}
        </Box>
      </Box>
    </>
  );
};
